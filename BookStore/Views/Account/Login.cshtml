@model BookStore.Models.ViewModels.Account.LoginUserViewModel

@{
    ViewBag.Title = "Login";
}

@Styles.Render("~/Content/customStyles/ValidationUserStyle.css")

@if (TempData["SuccessfulMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessfulMessage"]
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-container">

    <h2>Вход в аккаунт</h2>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-block">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-block">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-block">
        <div class="rememb-block">
            <div>
                @Html.EditorFor(model => model.RememberMe)
                @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.RememberMe, htmlAttributes: new { @class = "control-label" })
        </div>
        
    </div>
    

    <div>
        <div class="form-block">
            <input type="submit" value="Войти" class="form-btn grow" />

        </div>
        <div class="form-block">
            <a href="/account/create-account">Нет аккаунта? <span class="colored-link"> Зарегистрируйтесь</span></a>
        </div>
    </div>
</div>
}


